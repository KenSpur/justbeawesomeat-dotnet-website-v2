@page "/"
@using Client.Repositories
@using Client.Services
@using Data.IndexPage

<section id="animatePageRemoval" class="pt-page section-without-bg section-paddings-0 table pt-page-current pt-page-scaleUpDown pt-page-delay300" data-id="home">
    <div class="section-inner">
        <div class="home-page-block">
            <div class="mascot-img-block tilt-effect">
                <img src="images/mascot_lr.png" alt="mascot flying on a rocket, carrying a container into the cloud">
            </div>
            <h2>@IndexPageData.Title.FullName</h2>
            <div class="owl-carousel text-rotation">
                @foreach (var item in IndexPageData.Title.Items)
                {
                    <div class="item">
                        <p class="home-page-description">@item</p>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@code
{
    [Inject] public IJSRuntime Js { get; set; }
    [Inject] public INavigationService NavigationService { get; set; }
    [Inject] public IIndexPageDataRepository Repository { get; set; }

    public IndexPageData IndexPageData { get; set; } =  new IndexPageData();

    protected override async Task OnInitializedAsync()
    {
        NavigationService.AnimatePageRemovalAsync = AnimatePageRemovalAsync;

        IndexPageData = await Repository.GetIndexPageDataAsync();

        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            await Js.InvokeVoidAsync("window.initIndex");
    }

    private async Task AnimatePageRemovalAsync()
    {
        await Js.InvokeVoidAsync("window.animatePageRemoval", 21);

        await Task.Delay(300);
    }
}
